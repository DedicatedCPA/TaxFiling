{"ast":null,"code":"var _jsxFileName = \"/Users/arielkeren/Desktop/GitHub/TaxFiling/src/components/USMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { stateFilingData } from '../data/stateFilingData';\nimport { getConditionalText } from '../data/stateFilingData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USMap = ({\n  selectedStates,\n  filingType,\n  onStateClick\n}) => {\n  _s();\n  const svgContainerRef = useRef(null);\n  const [svgLoaded, setSvgLoaded] = useState(false);\n  const [tooltip, setTooltip] = useState(null);\n\n  // Helper functions defined first\n  const isStateSuitableForText = useCallback(stateElement => {\n    const stateId = stateElement.id;\n\n    // Explicitly exclude Hawaii, Maryland, and Massachusetts\n    if (stateId === 'HI' || stateId === 'MD' || stateId === 'MA') {\n      return false;\n    }\n    const bbox = stateElement.getBBox();\n\n    // Check if state is too small\n    if (bbox.width < 30 || bbox.height < 30) {\n      return false;\n    }\n\n    // Check if state has reasonable aspect ratio\n    const aspectRatio = bbox.width / bbox.height;\n    if (aspectRatio < 0.3 || aspectRatio > 3.5) {\n      return false;\n    }\n\n    // Check if the bounding box area is reasonable\n    const area = bbox.width * bbox.height;\n    if (area < 500) {\n      return false;\n    }\n    return true;\n  }, []);\n  const findOptimalTextPosition = useCallback((stateElement, bbox) => {\n    // Check if state is too small for text\n    if (bbox.width < 28 || bbox.height < 20) {\n      return null;\n    }\n\n    // Use bounding box center\n    return {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n  }, []);\n  const getCustomStatePosition = useCallback((stateId, bbox) => {\n    // Custom positioning for specific problematic states\n    switch (stateId) {\n      case 'FL':\n        return {\n          x: bbox.x + bbox.width * 0.78,\n          y: bbox.y + bbox.height * 0.45\n        };\n      case 'LA':\n        return {\n          x: bbox.x + bbox.width * 0.35,\n          y: bbox.y + bbox.height * 0.6\n        };\n      case 'WV':\n        return {\n          x: bbox.x + bbox.width * 0.45,\n          y: bbox.y + bbox.height * 0.55\n        };\n      case 'MD':\n      case 'MA':\n        return null;\n      // Don't show labels for these states\n      case 'MI':\n        return {\n          x: bbox.x + bbox.width * 0.7,\n          y: bbox.y + bbox.height * 0.7\n        };\n      case 'MN':\n        return {\n          x: bbox.x + bbox.width * 0.45,\n          y: bbox.y + bbox.height * 0.6\n        };\n      case 'KY':\n        return {\n          x: bbox.x + bbox.width * 0.55,\n          y: bbox.y + bbox.height * 0.5\n        };\n      case 'CA':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.6\n        };\n      case 'WA':\n        return {\n          x: bbox.x + bbox.width * 0.6,\n          y: bbox.y + bbox.height * 0.5\n        };\n      case 'ID':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.7\n        };\n      case 'WI':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.55\n        };\n      case 'TN':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.55\n        };\n      case 'AK':\n        const akX = bbox.x + bbox.width * 0.7;\n        const akY = bbox.y + bbox.height * 0.44;\n        const finalAkX = Math.max(bbox.x + 30, Math.min(akX, bbox.x + bbox.width - 30));\n        const finalAkY = Math.max(bbox.y + 30, Math.min(akY, bbox.y + bbox.height - 30));\n        return {\n          x: finalAkX,\n          y: finalAkY\n        };\n      case 'HI':\n        return null;\n      // Don't show label for Hawaii\n      default:\n        return null;\n      // Use general algorithm for other states\n    }\n  }, []);\n  const addStateLabel = useCallback(stateElement => {\n    const stateId = stateElement.id;\n    if (stateId && stateFilingData[stateId]) {\n      // Check if state is suitable for text display\n      if (!isStateSuitableForText(stateElement)) {\n        return false;\n      }\n      const bbox = stateElement.getBBox();\n\n      // Create text element for state abbreviation\n      const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      text.setAttribute('text-anchor', 'middle');\n      text.setAttribute('dominant-baseline', 'middle');\n      text.setAttribute('font-size', '12');\n      text.setAttribute('font-weight', 'bold');\n      text.setAttribute('fill', '#000000');\n      text.setAttribute('data-state-id', stateId);\n      text.textContent = stateId;\n\n      // Check for custom positioning for problematic states\n      const customPosition = getCustomStatePosition(stateId, bbox);\n      if (customPosition) {\n        text.setAttribute('x', customPosition.x);\n        text.setAttribute('y', customPosition.y);\n\n        // Add the text to the SVG\n        stateElement.parentNode.appendChild(text);\n        return true;\n      }\n\n      // Find the best position for the text using the general algorithm\n      const bestPosition = findOptimalTextPosition(stateElement, bbox);\n      if (bestPosition) {\n        text.setAttribute('x', bestPosition.x);\n        text.setAttribute('y', bestPosition.y);\n\n        // Add the text to the SVG\n        stateElement.parentNode.appendChild(text);\n        return true;\n      }\n    }\n    return false;\n  }, [isStateSuitableForText, getCustomStatePosition, findOptimalTextPosition]);\n  const addStateTooltip = useCallback(stateElement => {\n    const stateId = stateElement.id;\n    if (stateId && stateFilingData[stateId]) {\n      const stateData = stateFilingData[stateId];\n      stateElement.addEventListener('mouseenter', e => {\n        // Create comprehensive tooltip content\n        let tooltipContent = `<div class=\"tooltip-header\">${stateData.name} (${stateId})</div>`;\n\n        // Add warnings and advisories\n        let hasWarnings = false;\n        let warningsContent = '';\n        if (stateData.cityReturns) {\n          hasWarnings = true;\n          if (stateData.cityReturns.type === 'all') {\n            warningsContent += `\n              <div class=\"city-returns-warning\" style=\"margin: 0; font-size: 11px;\">\n                <strong>⚠️ All Cities Must File</strong>\n              </div>\n            `;\n          } else if (stateData.cityReturns.type === 'specific' && stateData.cityReturns.cities.length > 0) {\n            warningsContent += `\n              <div class=\"city-returns-advisory\" style=\"margin: 0; font-size: 11px;\">\n                <strong>ℹ️ City Returns: ${stateData.cityReturns.cities.join(', ')}</strong>\n              </div>\n            `;\n          }\n        }\n\n        // Add conditional filing note if applicable\n        const hasConditional = Object.values(stateData.forms).some(status => status === 'conditional');\n        if (hasConditional) {\n          hasWarnings = true;\n          if (warningsContent) {\n            warningsContent = `\n              <div style=\"display: flex; gap: 10px; margin-bottom: 20px;\">\n                <div style=\"flex: 1;\">${warningsContent}</div>\n                <div style=\"flex: 1;\">\n                  <div class=\"tooltip-note\" style=\"margin: 0; font-size: 11px;\">\n                    <strong>Conditional: ${getConditionalText(stateId)}</strong>\n                  </div>\n                </div>\n              </div>\n            `;\n          } else {\n            warningsContent = `\n              <div class=\"tooltip-note\" style=\"margin: 0 0 20px 0; font-size: 11px;\">\n                <strong>Conditional: ${getConditionalText(stateId)}</strong>\n              </div>\n            `;\n          }\n        } else if (warningsContent) {\n          warningsContent = `<div style=\"margin-bottom: 20px;\">${warningsContent}</div>`;\n        }\n        if (hasWarnings) {\n          tooltipContent += warningsContent;\n        }\n\n        // Add filing requirements with status indicators\n        const formTypes = [{\n          key: '1120S',\n          name: 'S Corporation (1120S)'\n        }, {\n          key: '1065',\n          name: 'Partnership (1065)'\n        }, {\n          key: '1120',\n          name: 'C Corporation (1120)'\n        }, {\n          key: '1040',\n          name: 'Individual (1040)'\n        }];\n        formTypes.forEach(form => {\n          const status = stateData.forms[form.key];\n          const statusClass = status === 'required' ? 'status-required' : status === 'conditional' ? 'status-conditional' : 'status-not-required';\n          const statusText = status === 'required' ? 'Required' : status === 'conditional' ? 'Conditional' : 'Not Required';\n          tooltipContent += `\n            <div class=\"tooltip-row\">\n              <span class=\"form-name\">${form.name}:</span>\n              <span class=\"status ${statusClass}\">${statusText}</span>\n            </div>\n          `;\n        });\n\n        // Create tooltip element\n        const tooltipElement = document.createElement('div');\n        tooltipElement.className = 'state-tooltip';\n        tooltipElement.innerHTML = tooltipContent;\n        tooltipElement.style.position = 'absolute';\n        tooltipElement.style.left = e.pageX + 15 + 'px';\n        tooltipElement.style.top = e.pageY - 15 + 'px';\n        tooltipElement.style.background = 'white';\n        tooltipElement.style.color = '#495057';\n        tooltipElement.style.padding = '25px';\n        tooltipElement.style.borderRadius = '12px';\n        tooltipElement.style.fontSize = '14px';\n        tooltipElement.style.zIndex = '1000';\n        tooltipElement.style.pointerEvents = 'none';\n        tooltipElement.style.boxShadow = '0 8px 32px rgba(0,0,0,0.15)';\n        tooltipElement.style.border = '1px solid #e9ecef';\n        tooltipElement.style.minWidth = '400px';\n        tooltipElement.style.maxWidth = '450px';\n        tooltipElement.style.lineHeight = '1.6';\n        document.body.appendChild(tooltipElement);\n        setTooltip(tooltipElement);\n      });\n      stateElement.addEventListener('mousemove', e => {\n        if (tooltip) {\n          const tooltipRect = tooltip.getBoundingClientRect();\n          const viewportWidth = window.innerWidth;\n          const viewportHeight = window.innerHeight;\n          let left = e.pageX + 15;\n          let top = e.pageY - 15;\n\n          // Adjust horizontal position if tooltip would go off-screen\n          if (left + tooltipRect.width > viewportWidth - 20) {\n            left = e.pageX - tooltipRect.width - 15;\n          }\n\n          // Adjust vertical position if tooltip would go off-screen\n          if (top + tooltipRect.height > viewportHeight - 20) {\n            top = e.pageY - tooltipRect.height - 15;\n          }\n          tooltip.style.left = left + 'px';\n          tooltip.style.top = top + 'px';\n        }\n      });\n      stateElement.addEventListener('mouseleave', () => {\n        if (tooltip) {\n          document.body.removeChild(tooltip);\n          setTooltip(null);\n        }\n      });\n    }\n  }, [tooltip]);\n  const addStateClickHandler = useCallback(stateElement => {\n    const stateId = stateElement.id;\n    stateElement.addEventListener('click', e => {\n      // Prevent tooltip from interfering with click\n      if (tooltip) {\n        document.body.removeChild(tooltip);\n        setTooltip(null);\n      }\n\n      // Clear any hover styles that might be persisting\n      stateElement.style.strokeWidth = '';\n      stateElement.style.stroke = '';\n\n      // Call the parent component's click handler\n      onStateClick(stateId);\n    });\n  }, [tooltip, onStateClick]);\n  const addLegendOverlay = useCallback(() => {\n    if (!svgContainerRef.current) return;\n    const legendOverlay = document.createElement('div');\n    legendOverlay.className = 'legend-overlay';\n    legendOverlay.innerHTML = `\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #28a745;\"></div>\n        <span>Filing Required</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #6c757d;\"></div>\n        <span>No Filing Required</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #ffc107;\"></div>\n        <span>Conditional Filing</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #ffffff; border: 1px solid #333;\"></div>\n        <span>Not Selected</span>\n      </div>\n    `;\n\n    // Insert legend overlay at the beginning of the SVG container\n    svgContainerRef.current.insertBefore(legendOverlay, svgContainerRef.current.firstChild);\n  }, []);\n  const updateTextColors = useCallback(() => {\n    if (!svgContainerRef.current) return;\n    const textElements = svgContainerRef.current.querySelectorAll('text[data-state-id]');\n    textElements.forEach(textElement => {\n      const stateId = textElement.getAttribute('data-state-id');\n      if (stateId && stateId.length === 2) {\n        const stateElement = svgContainerRef.current.querySelector(`#${stateId}`);\n        if (stateElement) {\n          let textColor = '#000000'; // Default to black\n\n          if (stateElement.classList.contains('filing-required') || stateElement.style.fill === '#28a745') {\n            textColor = '#ffffff'; // White for green\n          } else if (stateElement.classList.contains('no-filing') || stateElement.style.fill === '#6c757d') {\n            textColor = '#ffffff'; // White for grey\n          } else if (stateElement.classList.contains('conditional-filing') || stateElement.style.fill === '#ffc107') {\n            textColor = '#000000'; // Black for yellow\n          }\n          textElement.style.setProperty('fill', textColor, 'important');\n          textElement.setAttribute('fill', textColor);\n        }\n      }\n    });\n  }, []);\n  const updateMap = useCallback(() => {\n    if (!svgContainerRef.current) return;\n\n    // Reset all states to default light grey\n    const stateElements = svgContainerRef.current.querySelectorAll('.state');\n    stateElements.forEach(stateElement => {\n      stateElement.classList.remove('filing-required', 'no-filing', 'conditional-filing');\n      stateElement.style.setProperty('fill', '#f0f0f0', 'important');\n    });\n\n    // Color selected states based on filing requirements\n    selectedStates.forEach(stateAbbr => {\n      const stateElement = svgContainerRef.current.querySelector(`#${stateAbbr}`);\n      if (stateElement) {\n        const stateData = stateFilingData[stateAbbr];\n        const filingStatus = stateData.forms[filingType];\n        if (filingStatus === 'required') {\n          stateElement.classList.add('filing-required');\n          stateElement.style.fill = '#28a745';\n        } else if (filingStatus === 'conditional') {\n          stateElement.classList.add('conditional-filing');\n          stateElement.style.fill = '#ffc107';\n        } else if (filingStatus === 'not-required') {\n          stateElement.classList.add('no-filing');\n          stateElement.style.fill = '#6c757d';\n        }\n      }\n    });\n\n    // Update text colors\n    updateTextColors();\n  }, [selectedStates, filingType, updateTextColors]);\n  const loadSVGMap = useCallback(async () => {\n    try {\n      const response = await fetch('/us.svg');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const svgContent = await response.text();\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = svgContent;\n        const svg = svgContainerRef.current.querySelector('svg');\n        if (svg) {\n          svg.classList.add('usa-map');\n          svg.setAttribute('viewBox', '0 0 1200 700');\n          svg.style.width = '115%';\n          svg.style.height = 'auto';\n          svg.style.minHeight = '920px';\n          svg.style.margin = '0 auto';\n\n          // Add state classes and event listeners\n          const states = svg.querySelectorAll('path[id]');\n          let labeledStates = 0;\n          let tooltipStates = 0;\n          states.forEach(state => {\n            // Remove any existing fill colors and styles from SVG\n            state.removeAttribute('style');\n            state.removeAttribute('fill');\n\n            // Set default styling\n            state.style.setProperty('fill', '#f0f0f0', 'important');\n            state.style.cursor = 'pointer';\n            state.style.transition = 'fill 0.3s, stroke-width 0.3s';\n            state.style.position = 'relative';\n\n            // Add state class\n            state.classList.add('state', 'clickable');\n\n            // Add state abbreviation labels\n            if (addStateLabel(state)) {\n              labeledStates++;\n            }\n\n            // Add hover tooltip\n            addStateTooltip(state);\n            tooltipStates++;\n\n            // Add click functionality\n            addStateClickHandler(state);\n            console.log(`Initialized ${state.id} with fill: ${state.style.fill}`);\n          });\n          console.log(`Loaded ${states.length} states from SVG`);\n          console.log(`Added labels to ${labeledStates} states`);\n          console.log(`Added tooltips to ${tooltipStates} states`);\n        }\n\n        // Add legend overlay\n        addLegendOverlay();\n        setSvgLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error loading SVG:', error);\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = `\n          <div style=\"text-align: center; padding: 30px; color: #721c24; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; max-width: 600px; margin: 0 auto;\">\n            <h4 style=\"margin-top: 0; color: #721c24;\">Error Loading Map</h4>\n            <p style=\"margin-bottom: 20px;\">Unable to load the US map.</p>\n            <p><strong>Error:</strong> ${error.message}</p>\n            <p>Please try refreshing the page or check the browser console for more details.</p>\n          </div>\n        `;\n      }\n    }\n  }, [addStateLabel, addStateTooltip, addStateClickHandler, addLegendOverlay]);\n  useEffect(() => {\n    loadSVGMap();\n  }, [loadSVGMap]);\n  useEffect(() => {\n    if (svgLoaded) {\n      updateMap();\n    }\n  }, [svgLoaded, updateMap]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"svgContainer\",\n    ref: svgContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 5\n  }, this);\n};\n_s(USMap, \"xVJp6tra7eI2LGZXRysir4jZ4j4=\");\n_c = USMap;\nexport default USMap;\nvar _c;\n$RefreshReg$(_c, \"USMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","stateFilingData","getConditionalText","jsxDEV","_jsxDEV","USMap","selectedStates","filingType","onStateClick","_s","svgContainerRef","svgLoaded","setSvgLoaded","tooltip","setTooltip","isStateSuitableForText","stateElement","stateId","id","bbox","getBBox","width","height","aspectRatio","area","findOptimalTextPosition","x","y","getCustomStatePosition","akX","akY","finalAkX","Math","max","min","finalAkY","addStateLabel","text","document","createElementNS","setAttribute","textContent","customPosition","parentNode","appendChild","bestPosition","addStateTooltip","stateData","addEventListener","e","tooltipContent","name","hasWarnings","warningsContent","cityReturns","type","cities","length","join","hasConditional","Object","values","forms","some","status","formTypes","key","forEach","form","statusClass","statusText","tooltipElement","createElement","className","innerHTML","style","position","left","pageX","top","pageY","background","color","padding","borderRadius","fontSize","zIndex","pointerEvents","boxShadow","border","minWidth","maxWidth","lineHeight","body","tooltipRect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","removeChild","addStateClickHandler","strokeWidth","stroke","addLegendOverlay","current","legendOverlay","insertBefore","firstChild","updateTextColors","textElements","querySelectorAll","textElement","getAttribute","querySelector","textColor","classList","contains","fill","setProperty","updateMap","stateElements","remove","stateAbbr","filingStatus","add","loadSVGMap","response","fetch","ok","Error","svgContent","svg","minHeight","margin","states","labeledStates","tooltipStates","state","removeAttribute","cursor","transition","console","log","error","message","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arielkeren/Desktop/GitHub/TaxFiling/src/components/USMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { stateFilingData } from '../data/stateFilingData';\nimport { getConditionalText } from '../data/stateFilingData';\n\nconst USMap = ({ selectedStates, filingType, onStateClick }) => {\n  const svgContainerRef = useRef(null);\n  const [svgLoaded, setSvgLoaded] = useState(false);\n  const [tooltip, setTooltip] = useState(null);\n\n  // Helper functions defined first\n  const isStateSuitableForText = useCallback((stateElement) => {\n    const stateId = stateElement.id;\n    \n    // Explicitly exclude Hawaii, Maryland, and Massachusetts\n    if (stateId === 'HI' || stateId === 'MD' || stateId === 'MA') {\n      return false;\n    }\n    \n    const bbox = stateElement.getBBox();\n    \n    // Check if state is too small\n    if (bbox.width < 30 || bbox.height < 30) {\n      return false;\n    }\n    \n    // Check if state has reasonable aspect ratio\n    const aspectRatio = bbox.width / bbox.height;\n    if (aspectRatio < 0.3 || aspectRatio > 3.5) {\n      return false;\n    }\n    \n    // Check if the bounding box area is reasonable\n    const area = bbox.width * bbox.height;\n    if (area < 500) {\n      return false;\n    }\n    \n    return true;\n  }, []);\n\n  const findOptimalTextPosition = useCallback((stateElement, bbox) => {\n    // Check if state is too small for text\n    if (bbox.width < 28 || bbox.height < 20) {\n      return null;\n    }\n    \n    // Use bounding box center\n    return { \n      x: bbox.x + bbox.width / 2, \n      y: bbox.y + bbox.height / 2 \n    };\n  }, []);\n\n  const getCustomStatePosition = useCallback((stateId, bbox) => {\n    // Custom positioning for specific problematic states\n    switch (stateId) {\n      case 'FL':\n        return {\n          x: bbox.x + bbox.width * 0.78,\n          y: bbox.y + bbox.height * 0.45\n        };\n      case 'LA':\n        return {\n          x: bbox.x + bbox.width * 0.35,\n          y: bbox.y + bbox.height * 0.6\n        };\n      case 'WV':\n        return {\n          x: bbox.x + bbox.width * 0.45,\n          y: bbox.y + bbox.height * 0.55\n        };\n      case 'MD':\n      case 'MA':\n        return null; // Don't show labels for these states\n      case 'MI':\n        return {\n          x: bbox.x + bbox.width * 0.7,\n          y: bbox.y + bbox.height * 0.7\n        };\n      case 'MN':\n        return {\n          x: bbox.x + bbox.width * 0.45,\n          y: bbox.y + bbox.height * 0.6\n        };\n      case 'KY':\n        return {\n          x: bbox.x + bbox.width * 0.55,\n          y: bbox.y + bbox.height * 0.5\n        };\n      case 'CA':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.6\n        };\n      case 'WA':\n        return {\n          x: bbox.x + bbox.width * 0.6,\n          y: bbox.y + bbox.height * 0.5\n        };\n      case 'ID':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.7\n        };\n      case 'WI':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.55\n        };\n      case 'TN':\n        return {\n          x: bbox.x + bbox.width * 0.5,\n          y: bbox.y + bbox.height * 0.55\n        };\n      case 'AK':\n        const akX = bbox.x + bbox.width * 0.7;\n        const akY = bbox.y + bbox.height * 0.44;\n        const finalAkX = Math.max(bbox.x + 30, Math.min(akX, bbox.x + bbox.width - 30));\n        const finalAkY = Math.max(bbox.y + 30, Math.min(akY, bbox.y + bbox.height - 30));\n        return { x: finalAkX, y: finalAkY };\n      case 'HI':\n        return null; // Don't show label for Hawaii\n      default:\n        return null; // Use general algorithm for other states\n    }\n  }, []);\n\n  const addStateLabel = useCallback((stateElement) => {\n    const stateId = stateElement.id;\n    \n    if (stateId && stateFilingData[stateId]) {\n      // Check if state is suitable for text display\n      if (!isStateSuitableForText(stateElement)) {\n        return false;\n      }\n      \n      const bbox = stateElement.getBBox();\n      \n      // Create text element for state abbreviation\n      const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      text.setAttribute('text-anchor', 'middle');\n      text.setAttribute('dominant-baseline', 'middle');\n      text.setAttribute('font-size', '12');\n      text.setAttribute('font-weight', 'bold');\n      text.setAttribute('fill', '#000000');\n      text.setAttribute('data-state-id', stateId);\n      text.textContent = stateId;\n      \n      // Check for custom positioning for problematic states\n      const customPosition = getCustomStatePosition(stateId, bbox);\n      \n      if (customPosition) {\n        text.setAttribute('x', customPosition.x);\n        text.setAttribute('y', customPosition.y);\n        \n        // Add the text to the SVG\n        stateElement.parentNode.appendChild(text);\n        return true;\n      }\n      \n      // Find the best position for the text using the general algorithm\n      const bestPosition = findOptimalTextPosition(stateElement, bbox);\n      if (bestPosition) {\n        text.setAttribute('x', bestPosition.x);\n        text.setAttribute('y', bestPosition.y);\n        \n        // Add the text to the SVG\n        stateElement.parentNode.appendChild(text);\n        return true;\n      }\n    }\n    return false;\n  }, [isStateSuitableForText, getCustomStatePosition, findOptimalTextPosition]);\n\n  const addStateTooltip = useCallback((stateElement) => {\n    const stateId = stateElement.id;\n    if (stateId && stateFilingData[stateId]) {\n      const stateData = stateFilingData[stateId];\n      \n      stateElement.addEventListener('mouseenter', (e) => {\n        // Create comprehensive tooltip content\n        let tooltipContent = `<div class=\"tooltip-header\">${stateData.name} (${stateId})</div>`;\n        \n        // Add warnings and advisories\n        let hasWarnings = false;\n        let warningsContent = '';\n        \n        if (stateData.cityReturns) {\n          hasWarnings = true;\n          if (stateData.cityReturns.type === 'all') {\n            warningsContent += `\n              <div class=\"city-returns-warning\" style=\"margin: 0; font-size: 11px;\">\n                <strong>⚠️ All Cities Must File</strong>\n              </div>\n            `;\n          } else if (stateData.cityReturns.type === 'specific' && stateData.cityReturns.cities.length > 0) {\n            warningsContent += `\n              <div class=\"city-returns-advisory\" style=\"margin: 0; font-size: 11px;\">\n                <strong>ℹ️ City Returns: ${stateData.cityReturns.cities.join(', ')}</strong>\n              </div>\n            `;\n          }\n        }\n        \n        // Add conditional filing note if applicable\n        const hasConditional = Object.values(stateData.forms).some(status => status === 'conditional');\n        if (hasConditional) {\n          hasWarnings = true;\n          if (warningsContent) {\n            warningsContent = `\n              <div style=\"display: flex; gap: 10px; margin-bottom: 20px;\">\n                <div style=\"flex: 1;\">${warningsContent}</div>\n                <div style=\"flex: 1;\">\n                  <div class=\"tooltip-note\" style=\"margin: 0; font-size: 11px;\">\n                    <strong>Conditional: ${getConditionalText(stateId)}</strong>\n                  </div>\n                </div>\n              </div>\n            `;\n          } else {\n            warningsContent = `\n              <div class=\"tooltip-note\" style=\"margin: 0 0 20px 0; font-size: 11px;\">\n                <strong>Conditional: ${getConditionalText(stateId)}</strong>\n              </div>\n            `;\n          }\n        } else if (warningsContent) {\n          warningsContent = `<div style=\"margin-bottom: 20px;\">${warningsContent}</div>`;\n        }\n        \n        if (hasWarnings) {\n          tooltipContent += warningsContent;\n        }\n        \n        // Add filing requirements with status indicators\n        const formTypes = [\n          { key: '1120S', name: 'S Corporation (1120S)' },\n          { key: '1065', name: 'Partnership (1065)' },\n          { key: '1120', name: 'C Corporation (1120)' },\n          { key: '1040', name: 'Individual (1040)' }\n        ];\n        \n        formTypes.forEach(form => {\n          const status = stateData.forms[form.key];\n          const statusClass = status === 'required' ? 'status-required' : \n                            status === 'conditional' ? 'status-conditional' : 'status-not-required';\n          const statusText = status === 'required' ? 'Required' : \n                           status === 'conditional' ? 'Conditional' : 'Not Required';\n          \n          tooltipContent += `\n            <div class=\"tooltip-row\">\n              <span class=\"form-name\">${form.name}:</span>\n              <span class=\"status ${statusClass}\">${statusText}</span>\n            </div>\n          `;\n        });\n        \n        // Create tooltip element\n        const tooltipElement = document.createElement('div');\n        tooltipElement.className = 'state-tooltip';\n        tooltipElement.innerHTML = tooltipContent;\n        tooltipElement.style.position = 'absolute';\n        tooltipElement.style.left = e.pageX + 15 + 'px';\n        tooltipElement.style.top = e.pageY - 15 + 'px';\n        tooltipElement.style.background = 'white';\n        tooltipElement.style.color = '#495057';\n        tooltipElement.style.padding = '25px';\n        tooltipElement.style.borderRadius = '12px';\n        tooltipElement.style.fontSize = '14px';\n        tooltipElement.style.zIndex = '1000';\n        tooltipElement.style.pointerEvents = 'none';\n        tooltipElement.style.boxShadow = '0 8px 32px rgba(0,0,0,0.15)';\n        tooltipElement.style.border = '1px solid #e9ecef';\n        tooltipElement.style.minWidth = '400px';\n        tooltipElement.style.maxWidth = '450px';\n        tooltipElement.style.lineHeight = '1.6';\n        \n        document.body.appendChild(tooltipElement);\n        setTooltip(tooltipElement);\n      });\n      \n      stateElement.addEventListener('mousemove', (e) => {\n        if (tooltip) {\n          const tooltipRect = tooltip.getBoundingClientRect();\n          const viewportWidth = window.innerWidth;\n          const viewportHeight = window.innerHeight;\n          \n          let left = e.pageX + 15;\n          let top = e.pageY - 15;\n          \n          // Adjust horizontal position if tooltip would go off-screen\n          if (left + tooltipRect.width > viewportWidth - 20) {\n            left = e.pageX - tooltipRect.width - 15;\n          }\n          \n          // Adjust vertical position if tooltip would go off-screen\n          if (top + tooltipRect.height > viewportHeight - 20) {\n            top = e.pageY - tooltipRect.height - 15;\n          }\n          \n          tooltip.style.left = left + 'px';\n          tooltip.style.top = top + 'px';\n        }\n      });\n      \n      stateElement.addEventListener('mouseleave', () => {\n        if (tooltip) {\n          document.body.removeChild(tooltip);\n          setTooltip(null);\n        }\n      });\n    }\n  }, [tooltip]);\n\n  const addStateClickHandler = useCallback((stateElement) => {\n    const stateId = stateElement.id;\n    \n    stateElement.addEventListener('click', (e) => {\n      // Prevent tooltip from interfering with click\n      if (tooltip) {\n        document.body.removeChild(tooltip);\n        setTooltip(null);\n      }\n      \n      // Clear any hover styles that might be persisting\n      stateElement.style.strokeWidth = '';\n      stateElement.style.stroke = '';\n      \n      // Call the parent component's click handler\n      onStateClick(stateId);\n    });\n  }, [tooltip, onStateClick]);\n\n  const addLegendOverlay = useCallback(() => {\n    if (!svgContainerRef.current) return;\n    \n    const legendOverlay = document.createElement('div');\n    legendOverlay.className = 'legend-overlay';\n    legendOverlay.innerHTML = `\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #28a745;\"></div>\n        <span>Filing Required</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #6c757d;\"></div>\n        <span>No Filing Required</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #ffc107;\"></div>\n        <span>Conditional Filing</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-color\" style=\"background: #ffffff; border: 1px solid #333;\"></div>\n        <span>Not Selected</span>\n      </div>\n    `;\n    \n    // Insert legend overlay at the beginning of the SVG container\n    svgContainerRef.current.insertBefore(legendOverlay, svgContainerRef.current.firstChild);\n  }, []);\n\n  const updateTextColors = useCallback(() => {\n    if (!svgContainerRef.current) return;\n    \n    const textElements = svgContainerRef.current.querySelectorAll('text[data-state-id]');\n    \n    textElements.forEach(textElement => {\n      const stateId = textElement.getAttribute('data-state-id');\n      if (stateId && stateId.length === 2) {\n        const stateElement = svgContainerRef.current.querySelector(`#${stateId}`);\n        \n        if (stateElement) {\n          let textColor = '#000000'; // Default to black\n          \n          if (stateElement.classList.contains('filing-required') || stateElement.style.fill === '#28a745') {\n            textColor = '#ffffff'; // White for green\n          } else if (stateElement.classList.contains('no-filing') || stateElement.style.fill === '#6c757d') {\n            textColor = '#ffffff'; // White for grey\n          } else if (stateElement.classList.contains('conditional-filing') || stateElement.style.fill === '#ffc107') {\n            textColor = '#000000'; // Black for yellow\n          }\n          \n          textElement.style.setProperty('fill', textColor, 'important');\n          textElement.setAttribute('fill', textColor);\n        }\n      }\n    });\n  }, []);\n\n  const updateMap = useCallback(() => {\n    if (!svgContainerRef.current) return;\n    \n    // Reset all states to default light grey\n    const stateElements = svgContainerRef.current.querySelectorAll('.state');\n    stateElements.forEach(stateElement => {\n      stateElement.classList.remove('filing-required', 'no-filing', 'conditional-filing');\n      stateElement.style.setProperty('fill', '#f0f0f0', 'important');\n    });\n    \n    // Color selected states based on filing requirements\n    selectedStates.forEach(stateAbbr => {\n      const stateElement = svgContainerRef.current.querySelector(`#${stateAbbr}`);\n      if (stateElement) {\n        const stateData = stateFilingData[stateAbbr];\n        const filingStatus = stateData.forms[filingType];\n        \n        if (filingStatus === 'required') {\n          stateElement.classList.add('filing-required');\n          stateElement.style.fill = '#28a745';\n        } else if (filingStatus === 'conditional') {\n          stateElement.classList.add('conditional-filing');\n          stateElement.style.fill = '#ffc107';\n        } else if (filingStatus === 'not-required') {\n          stateElement.classList.add('no-filing');\n          stateElement.style.fill = '#6c757d';\n        }\n      }\n    });\n    \n    // Update text colors\n    updateTextColors();\n  }, [selectedStates, filingType, updateTextColors]);\n\n  const loadSVGMap = useCallback(async () => {\n    try {\n      const response = await fetch('/us.svg');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const svgContent = await response.text();\n      \n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = svgContent;\n        \n        const svg = svgContainerRef.current.querySelector('svg');\n        if (svg) {\n          svg.classList.add('usa-map');\n          svg.setAttribute('viewBox', '0 0 1200 700');\n          svg.style.width = '115%';\n          svg.style.height = 'auto';\n          svg.style.minHeight = '920px';\n          svg.style.margin = '0 auto';\n          \n          // Add state classes and event listeners\n          const states = svg.querySelectorAll('path[id]');\n          let labeledStates = 0;\n          let tooltipStates = 0;\n          \n          states.forEach(state => {\n            // Remove any existing fill colors and styles from SVG\n            state.removeAttribute('style');\n            state.removeAttribute('fill');\n            \n            // Set default styling\n            state.style.setProperty('fill', '#f0f0f0', 'important');\n            state.style.cursor = 'pointer';\n            state.style.transition = 'fill 0.3s, stroke-width 0.3s';\n            state.style.position = 'relative';\n            \n            // Add state class\n            state.classList.add('state', 'clickable');\n            \n            // Add state abbreviation labels\n            if (addStateLabel(state)) {\n              labeledStates++;\n            }\n            \n            // Add hover tooltip\n            addStateTooltip(state);\n            tooltipStates++;\n            \n            // Add click functionality\n            addStateClickHandler(state);\n            \n            console.log(`Initialized ${state.id} with fill: ${state.style.fill}`);\n          });\n          \n          console.log(`Loaded ${states.length} states from SVG`);\n          console.log(`Added labels to ${labeledStates} states`);\n          console.log(`Added tooltips to ${tooltipStates} states`);\n        }\n        \n        // Add legend overlay\n        addLegendOverlay();\n        \n        setSvgLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error loading SVG:', error);\n      if (svgContainerRef.current) {\n        svgContainerRef.current.innerHTML = `\n          <div style=\"text-align: center; padding: 30px; color: #721c24; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; max-width: 600px; margin: 0 auto;\">\n            <h4 style=\"margin-top: 0; color: #721c24;\">Error Loading Map</h4>\n            <p style=\"margin-bottom: 20px;\">Unable to load the US map.</p>\n            <p><strong>Error:</strong> ${error.message}</p>\n            <p>Please try refreshing the page or check the browser console for more details.</p>\n          </div>\n        `;\n      }\n    }\n  }, [addStateLabel, addStateTooltip, addStateClickHandler, addLegendOverlay]);\n\n  useEffect(() => {\n    loadSVGMap();\n  }, [loadSVGMap]);\n\n  useEffect(() => {\n    if (svgLoaded) {\n      updateMap();\n    }\n  }, [svgLoaded, updateMap]);\n\n  return (\n    <div id=\"svgContainer\" ref={svgContainerRef}>\n      {/* SVG will be loaded here */}\n    </div>\n  );\n};\n\nexport default USMap; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,kBAAkB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,KAAK,GAAGA,CAAC;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAMC,eAAe,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMgB,sBAAsB,GAAGf,WAAW,CAAEgB,YAAY,IAAK;IAC3D,MAAMC,OAAO,GAAGD,YAAY,CAACE,EAAE;;IAE/B;IACA,IAAID,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,IAAI,EAAE;MAC5D,OAAO,KAAK;IACd;IAEA,MAAME,IAAI,GAAGH,YAAY,CAACI,OAAO,CAAC,CAAC;;IAEnC;IACA,IAAID,IAAI,CAACE,KAAK,GAAG,EAAE,IAAIF,IAAI,CAACG,MAAM,GAAG,EAAE,EAAE;MACvC,OAAO,KAAK;IACd;;IAEA;IACA,MAAMC,WAAW,GAAGJ,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACG,MAAM;IAC5C,IAAIC,WAAW,GAAG,GAAG,IAAIA,WAAW,GAAG,GAAG,EAAE;MAC1C,OAAO,KAAK;IACd;;IAEA;IACA,MAAMC,IAAI,GAAGL,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACG,MAAM;IACrC,IAAIE,IAAI,GAAG,GAAG,EAAE;MACd,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,uBAAuB,GAAGzB,WAAW,CAAC,CAACgB,YAAY,EAAEG,IAAI,KAAK;IAClE;IACA,IAAIA,IAAI,CAACE,KAAK,GAAG,EAAE,IAAIF,IAAI,CAACG,MAAM,GAAG,EAAE,EAAE;MACvC,OAAO,IAAI;IACb;;IAEA;IACA,OAAO;MACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,CAAC;MAC1BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,sBAAsB,GAAG5B,WAAW,CAAC,CAACiB,OAAO,EAAEE,IAAI,KAAK;IAC5D;IACA,QAAQF,OAAO;MACb,KAAK,IAAI;QACP,OAAO;UACLS,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,IAAI;UAC7BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,IAAI;UAC7BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,IAAI;UAC7BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;MACT,KAAK,IAAI;QACP,OAAO,IAAI;MAAE;MACf,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;UAC5BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,IAAI;UAC7BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,IAAI;UAC7BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;UAC5BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;UAC5BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;UAC5BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;UAC5BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLI,CAAC,EAAEP,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;UAC5BM,CAAC,EAAER,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG;QAC5B,CAAC;MACH,KAAK,IAAI;QACP,MAAMO,GAAG,GAAGV,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,GAAG;QACrC,MAAMS,GAAG,GAAGX,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG,IAAI;QACvC,MAAMS,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACd,IAAI,CAACO,CAAC,GAAG,EAAE,EAAEM,IAAI,CAACE,GAAG,CAACL,GAAG,EAAEV,IAAI,CAACO,CAAC,GAAGP,IAAI,CAACE,KAAK,GAAG,EAAE,CAAC,CAAC;QAC/E,MAAMc,QAAQ,GAAGH,IAAI,CAACC,GAAG,CAACd,IAAI,CAACQ,CAAC,GAAG,EAAE,EAAEK,IAAI,CAACE,GAAG,CAACJ,GAAG,EAAEX,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACG,MAAM,GAAG,EAAE,CAAC,CAAC;QAChF,OAAO;UAAEI,CAAC,EAAEK,QAAQ;UAAEJ,CAAC,EAAEQ;QAAS,CAAC;MACrC,KAAK,IAAI;QACP,OAAO,IAAI;MAAE;MACf;QACE,OAAO,IAAI;MAAE;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAGpC,WAAW,CAAEgB,YAAY,IAAK;IAClD,MAAMC,OAAO,GAAGD,YAAY,CAACE,EAAE;IAE/B,IAAID,OAAO,IAAIhB,eAAe,CAACgB,OAAO,CAAC,EAAE;MACvC;MACA,IAAI,CAACF,sBAAsB,CAACC,YAAY,CAAC,EAAE;QACzC,OAAO,KAAK;MACd;MAEA,MAAMG,IAAI,GAAGH,YAAY,CAACI,OAAO,CAAC,CAAC;;MAEnC;MACA,MAAMiB,IAAI,GAAGC,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,MAAM,CAAC;MAC3EF,IAAI,CAACG,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC;MAC1CH,IAAI,CAACG,YAAY,CAAC,mBAAmB,EAAE,QAAQ,CAAC;MAChDH,IAAI,CAACG,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC;MACpCH,IAAI,CAACG,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;MACxCH,IAAI,CAACG,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC;MACpCH,IAAI,CAACG,YAAY,CAAC,eAAe,EAAEvB,OAAO,CAAC;MAC3CoB,IAAI,CAACI,WAAW,GAAGxB,OAAO;;MAE1B;MACA,MAAMyB,cAAc,GAAGd,sBAAsB,CAACX,OAAO,EAAEE,IAAI,CAAC;MAE5D,IAAIuB,cAAc,EAAE;QAClBL,IAAI,CAACG,YAAY,CAAC,GAAG,EAAEE,cAAc,CAAChB,CAAC,CAAC;QACxCW,IAAI,CAACG,YAAY,CAAC,GAAG,EAAEE,cAAc,CAACf,CAAC,CAAC;;QAExC;QACAX,YAAY,CAAC2B,UAAU,CAACC,WAAW,CAACP,IAAI,CAAC;QACzC,OAAO,IAAI;MACb;;MAEA;MACA,MAAMQ,YAAY,GAAGpB,uBAAuB,CAACT,YAAY,EAAEG,IAAI,CAAC;MAChE,IAAI0B,YAAY,EAAE;QAChBR,IAAI,CAACG,YAAY,CAAC,GAAG,EAAEK,YAAY,CAACnB,CAAC,CAAC;QACtCW,IAAI,CAACG,YAAY,CAAC,GAAG,EAAEK,YAAY,CAAClB,CAAC,CAAC;;QAEtC;QACAX,YAAY,CAAC2B,UAAU,CAACC,WAAW,CAACP,IAAI,CAAC;QACzC,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd,CAAC,EAAE,CAACtB,sBAAsB,EAAEa,sBAAsB,EAAEH,uBAAuB,CAAC,CAAC;EAE7E,MAAMqB,eAAe,GAAG9C,WAAW,CAAEgB,YAAY,IAAK;IACpD,MAAMC,OAAO,GAAGD,YAAY,CAACE,EAAE;IAC/B,IAAID,OAAO,IAAIhB,eAAe,CAACgB,OAAO,CAAC,EAAE;MACvC,MAAM8B,SAAS,GAAG9C,eAAe,CAACgB,OAAO,CAAC;MAE1CD,YAAY,CAACgC,gBAAgB,CAAC,YAAY,EAAGC,CAAC,IAAK;QACjD;QACA,IAAIC,cAAc,GAAG,+BAA+BH,SAAS,CAACI,IAAI,KAAKlC,OAAO,SAAS;;QAEvF;QACA,IAAImC,WAAW,GAAG,KAAK;QACvB,IAAIC,eAAe,GAAG,EAAE;QAExB,IAAIN,SAAS,CAACO,WAAW,EAAE;UACzBF,WAAW,GAAG,IAAI;UAClB,IAAIL,SAAS,CAACO,WAAW,CAACC,IAAI,KAAK,KAAK,EAAE;YACxCF,eAAe,IAAI;AAC/B;AACA;AACA;AACA,aAAa;UACH,CAAC,MAAM,IAAIN,SAAS,CAACO,WAAW,CAACC,IAAI,KAAK,UAAU,IAAIR,SAAS,CAACO,WAAW,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;YAC/FJ,eAAe,IAAI;AAC/B;AACA,2CAA2CN,SAAS,CAACO,WAAW,CAACE,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC;AAClF;AACA,aAAa;UACH;QACF;;QAEA;QACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACd,SAAS,CAACe,KAAK,CAAC,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,KAAK,aAAa,CAAC;QAC9F,IAAIL,cAAc,EAAE;UAClBP,WAAW,GAAG,IAAI;UAClB,IAAIC,eAAe,EAAE;YACnBA,eAAe,GAAG;AAC9B;AACA,wCAAwCA,eAAe;AACvD;AACA;AACA,2CAA2CnD,kBAAkB,CAACe,OAAO,CAAC;AACtE;AACA;AACA;AACA,aAAa;UACH,CAAC,MAAM;YACLoC,eAAe,GAAG;AAC9B;AACA,uCAAuCnD,kBAAkB,CAACe,OAAO,CAAC;AAClE;AACA,aAAa;UACH;QACF,CAAC,MAAM,IAAIoC,eAAe,EAAE;UAC1BA,eAAe,GAAG,qCAAqCA,eAAe,QAAQ;QAChF;QAEA,IAAID,WAAW,EAAE;UACfF,cAAc,IAAIG,eAAe;QACnC;;QAEA;QACA,MAAMY,SAAS,GAAG,CAChB;UAAEC,GAAG,EAAE,OAAO;UAAEf,IAAI,EAAE;QAAwB,CAAC,EAC/C;UAAEe,GAAG,EAAE,MAAM;UAAEf,IAAI,EAAE;QAAqB,CAAC,EAC3C;UAAEe,GAAG,EAAE,MAAM;UAAEf,IAAI,EAAE;QAAuB,CAAC,EAC7C;UAAEe,GAAG,EAAE,MAAM;UAAEf,IAAI,EAAE;QAAoB,CAAC,CAC3C;QAEDc,SAAS,CAACE,OAAO,CAACC,IAAI,IAAI;UACxB,MAAMJ,MAAM,GAAGjB,SAAS,CAACe,KAAK,CAACM,IAAI,CAACF,GAAG,CAAC;UACxC,MAAMG,WAAW,GAAGL,MAAM,KAAK,UAAU,GAAG,iBAAiB,GAC3CA,MAAM,KAAK,aAAa,GAAG,oBAAoB,GAAG,qBAAqB;UACzF,MAAMM,UAAU,GAAGN,MAAM,KAAK,UAAU,GAAG,UAAU,GACpCA,MAAM,KAAK,aAAa,GAAG,aAAa,GAAG,cAAc;UAE1Ed,cAAc,IAAI;AAC5B;AACA,wCAAwCkB,IAAI,CAACjB,IAAI;AACjD,oCAAoCkB,WAAW,KAAKC,UAAU;AAC9D;AACA,WAAW;QACH,CAAC,CAAC;;QAEF;QACA,MAAMC,cAAc,GAAGjC,QAAQ,CAACkC,aAAa,CAAC,KAAK,CAAC;QACpDD,cAAc,CAACE,SAAS,GAAG,eAAe;QAC1CF,cAAc,CAACG,SAAS,GAAGxB,cAAc;QACzCqB,cAAc,CAACI,KAAK,CAACC,QAAQ,GAAG,UAAU;QAC1CL,cAAc,CAACI,KAAK,CAACE,IAAI,GAAG5B,CAAC,CAAC6B,KAAK,GAAG,EAAE,GAAG,IAAI;QAC/CP,cAAc,CAACI,KAAK,CAACI,GAAG,GAAG9B,CAAC,CAAC+B,KAAK,GAAG,EAAE,GAAG,IAAI;QAC9CT,cAAc,CAACI,KAAK,CAACM,UAAU,GAAG,OAAO;QACzCV,cAAc,CAACI,KAAK,CAACO,KAAK,GAAG,SAAS;QACtCX,cAAc,CAACI,KAAK,CAACQ,OAAO,GAAG,MAAM;QACrCZ,cAAc,CAACI,KAAK,CAACS,YAAY,GAAG,MAAM;QAC1Cb,cAAc,CAACI,KAAK,CAACU,QAAQ,GAAG,MAAM;QACtCd,cAAc,CAACI,KAAK,CAACW,MAAM,GAAG,MAAM;QACpCf,cAAc,CAACI,KAAK,CAACY,aAAa,GAAG,MAAM;QAC3ChB,cAAc,CAACI,KAAK,CAACa,SAAS,GAAG,6BAA6B;QAC9DjB,cAAc,CAACI,KAAK,CAACc,MAAM,GAAG,mBAAmB;QACjDlB,cAAc,CAACI,KAAK,CAACe,QAAQ,GAAG,OAAO;QACvCnB,cAAc,CAACI,KAAK,CAACgB,QAAQ,GAAG,OAAO;QACvCpB,cAAc,CAACI,KAAK,CAACiB,UAAU,GAAG,KAAK;QAEvCtD,QAAQ,CAACuD,IAAI,CAACjD,WAAW,CAAC2B,cAAc,CAAC;QACzCzD,UAAU,CAACyD,cAAc,CAAC;MAC5B,CAAC,CAAC;MAEFvD,YAAY,CAACgC,gBAAgB,CAAC,WAAW,EAAGC,CAAC,IAAK;QAChD,IAAIpC,OAAO,EAAE;UACX,MAAMiF,WAAW,GAAGjF,OAAO,CAACkF,qBAAqB,CAAC,CAAC;UACnD,MAAMC,aAAa,GAAGC,MAAM,CAACC,UAAU;UACvC,MAAMC,cAAc,GAAGF,MAAM,CAACG,WAAW;UAEzC,IAAIvB,IAAI,GAAG5B,CAAC,CAAC6B,KAAK,GAAG,EAAE;UACvB,IAAIC,GAAG,GAAG9B,CAAC,CAAC+B,KAAK,GAAG,EAAE;;UAEtB;UACA,IAAIH,IAAI,GAAGiB,WAAW,CAACzE,KAAK,GAAG2E,aAAa,GAAG,EAAE,EAAE;YACjDnB,IAAI,GAAG5B,CAAC,CAAC6B,KAAK,GAAGgB,WAAW,CAACzE,KAAK,GAAG,EAAE;UACzC;;UAEA;UACA,IAAI0D,GAAG,GAAGe,WAAW,CAACxE,MAAM,GAAG6E,cAAc,GAAG,EAAE,EAAE;YAClDpB,GAAG,GAAG9B,CAAC,CAAC+B,KAAK,GAAGc,WAAW,CAACxE,MAAM,GAAG,EAAE;UACzC;UAEAT,OAAO,CAAC8D,KAAK,CAACE,IAAI,GAAGA,IAAI,GAAG,IAAI;UAChChE,OAAO,CAAC8D,KAAK,CAACI,GAAG,GAAGA,GAAG,GAAG,IAAI;QAChC;MACF,CAAC,CAAC;MAEF/D,YAAY,CAACgC,gBAAgB,CAAC,YAAY,EAAE,MAAM;QAChD,IAAInC,OAAO,EAAE;UACXyB,QAAQ,CAACuD,IAAI,CAACQ,WAAW,CAACxF,OAAO,CAAC;UAClCC,UAAU,CAAC,IAAI,CAAC;QAClB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb,MAAMyF,oBAAoB,GAAGtG,WAAW,CAAEgB,YAAY,IAAK;IACzD,MAAMC,OAAO,GAAGD,YAAY,CAACE,EAAE;IAE/BF,YAAY,CAACgC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;MAC5C;MACA,IAAIpC,OAAO,EAAE;QACXyB,QAAQ,CAACuD,IAAI,CAACQ,WAAW,CAACxF,OAAO,CAAC;QAClCC,UAAU,CAAC,IAAI,CAAC;MAClB;;MAEA;MACAE,YAAY,CAAC2D,KAAK,CAAC4B,WAAW,GAAG,EAAE;MACnCvF,YAAY,CAAC2D,KAAK,CAAC6B,MAAM,GAAG,EAAE;;MAE9B;MACAhG,YAAY,CAACS,OAAO,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,OAAO,EAAEL,YAAY,CAAC,CAAC;EAE3B,MAAMiG,gBAAgB,GAAGzG,WAAW,CAAC,MAAM;IACzC,IAAI,CAACU,eAAe,CAACgG,OAAO,EAAE;IAE9B,MAAMC,aAAa,GAAGrE,QAAQ,CAACkC,aAAa,CAAC,KAAK,CAAC;IACnDmC,aAAa,CAAClC,SAAS,GAAG,gBAAgB;IAC1CkC,aAAa,CAACjC,SAAS,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;IAED;IACAhE,eAAe,CAACgG,OAAO,CAACE,YAAY,CAACD,aAAa,EAAEjG,eAAe,CAACgG,OAAO,CAACG,UAAU,CAAC;EACzF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAG9G,WAAW,CAAC,MAAM;IACzC,IAAI,CAACU,eAAe,CAACgG,OAAO,EAAE;IAE9B,MAAMK,YAAY,GAAGrG,eAAe,CAACgG,OAAO,CAACM,gBAAgB,CAAC,qBAAqB,CAAC;IAEpFD,YAAY,CAAC5C,OAAO,CAAC8C,WAAW,IAAI;MAClC,MAAMhG,OAAO,GAAGgG,WAAW,CAACC,YAAY,CAAC,eAAe,CAAC;MACzD,IAAIjG,OAAO,IAAIA,OAAO,CAACwC,MAAM,KAAK,CAAC,EAAE;QACnC,MAAMzC,YAAY,GAAGN,eAAe,CAACgG,OAAO,CAACS,aAAa,CAAC,IAAIlG,OAAO,EAAE,CAAC;QAEzE,IAAID,YAAY,EAAE;UAChB,IAAIoG,SAAS,GAAG,SAAS,CAAC,CAAC;;UAE3B,IAAIpG,YAAY,CAACqG,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC,IAAItG,YAAY,CAAC2D,KAAK,CAAC4C,IAAI,KAAK,SAAS,EAAE;YAC/FH,SAAS,GAAG,SAAS,CAAC,CAAC;UACzB,CAAC,MAAM,IAAIpG,YAAY,CAACqG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAItG,YAAY,CAAC2D,KAAK,CAAC4C,IAAI,KAAK,SAAS,EAAE;YAChGH,SAAS,GAAG,SAAS,CAAC,CAAC;UACzB,CAAC,MAAM,IAAIpG,YAAY,CAACqG,SAAS,CAACC,QAAQ,CAAC,oBAAoB,CAAC,IAAItG,YAAY,CAAC2D,KAAK,CAAC4C,IAAI,KAAK,SAAS,EAAE;YACzGH,SAAS,GAAG,SAAS,CAAC,CAAC;UACzB;UAEAH,WAAW,CAACtC,KAAK,CAAC6C,WAAW,CAAC,MAAM,EAAEJ,SAAS,EAAE,WAAW,CAAC;UAC7DH,WAAW,CAACzE,YAAY,CAAC,MAAM,EAAE4E,SAAS,CAAC;QAC7C;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAGzH,WAAW,CAAC,MAAM;IAClC,IAAI,CAACU,eAAe,CAACgG,OAAO,EAAE;;IAE9B;IACA,MAAMgB,aAAa,GAAGhH,eAAe,CAACgG,OAAO,CAACM,gBAAgB,CAAC,QAAQ,CAAC;IACxEU,aAAa,CAACvD,OAAO,CAACnD,YAAY,IAAI;MACpCA,YAAY,CAACqG,SAAS,CAACM,MAAM,CAAC,iBAAiB,EAAE,WAAW,EAAE,oBAAoB,CAAC;MACnF3G,YAAY,CAAC2D,KAAK,CAAC6C,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC;IAChE,CAAC,CAAC;;IAEF;IACAlH,cAAc,CAAC6D,OAAO,CAACyD,SAAS,IAAI;MAClC,MAAM5G,YAAY,GAAGN,eAAe,CAACgG,OAAO,CAACS,aAAa,CAAC,IAAIS,SAAS,EAAE,CAAC;MAC3E,IAAI5G,YAAY,EAAE;QAChB,MAAM+B,SAAS,GAAG9C,eAAe,CAAC2H,SAAS,CAAC;QAC5C,MAAMC,YAAY,GAAG9E,SAAS,CAACe,KAAK,CAACvD,UAAU,CAAC;QAEhD,IAAIsH,YAAY,KAAK,UAAU,EAAE;UAC/B7G,YAAY,CAACqG,SAAS,CAACS,GAAG,CAAC,iBAAiB,CAAC;UAC7C9G,YAAY,CAAC2D,KAAK,CAAC4C,IAAI,GAAG,SAAS;QACrC,CAAC,MAAM,IAAIM,YAAY,KAAK,aAAa,EAAE;UACzC7G,YAAY,CAACqG,SAAS,CAACS,GAAG,CAAC,oBAAoB,CAAC;UAChD9G,YAAY,CAAC2D,KAAK,CAAC4C,IAAI,GAAG,SAAS;QACrC,CAAC,MAAM,IAAIM,YAAY,KAAK,cAAc,EAAE;UAC1C7G,YAAY,CAACqG,SAAS,CAACS,GAAG,CAAC,WAAW,CAAC;UACvC9G,YAAY,CAAC2D,KAAK,CAAC4C,IAAI,GAAG,SAAS;QACrC;MACF;IACF,CAAC,CAAC;;IAEF;IACAT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACxG,cAAc,EAAEC,UAAU,EAAEuG,gBAAgB,CAAC,CAAC;EAElD,MAAMiB,UAAU,GAAG/H,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMgI,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,CAAC;MACvC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAAChE,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMoE,UAAU,GAAG,MAAMJ,QAAQ,CAAC3F,IAAI,CAAC,CAAC;MAExC,IAAI3B,eAAe,CAACgG,OAAO,EAAE;QAC3BhG,eAAe,CAACgG,OAAO,CAAChC,SAAS,GAAG0D,UAAU;QAE9C,MAAMC,GAAG,GAAG3H,eAAe,CAACgG,OAAO,CAACS,aAAa,CAAC,KAAK,CAAC;QACxD,IAAIkB,GAAG,EAAE;UACPA,GAAG,CAAChB,SAAS,CAACS,GAAG,CAAC,SAAS,CAAC;UAC5BO,GAAG,CAAC7F,YAAY,CAAC,SAAS,EAAE,cAAc,CAAC;UAC3C6F,GAAG,CAAC1D,KAAK,CAACtD,KAAK,GAAG,MAAM;UACxBgH,GAAG,CAAC1D,KAAK,CAACrD,MAAM,GAAG,MAAM;UACzB+G,GAAG,CAAC1D,KAAK,CAAC2D,SAAS,GAAG,OAAO;UAC7BD,GAAG,CAAC1D,KAAK,CAAC4D,MAAM,GAAG,QAAQ;;UAE3B;UACA,MAAMC,MAAM,GAAGH,GAAG,CAACrB,gBAAgB,CAAC,UAAU,CAAC;UAC/C,IAAIyB,aAAa,GAAG,CAAC;UACrB,IAAIC,aAAa,GAAG,CAAC;UAErBF,MAAM,CAACrE,OAAO,CAACwE,KAAK,IAAI;YACtB;YACAA,KAAK,CAACC,eAAe,CAAC,OAAO,CAAC;YAC9BD,KAAK,CAACC,eAAe,CAAC,MAAM,CAAC;;YAE7B;YACAD,KAAK,CAAChE,KAAK,CAAC6C,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC;YACvDmB,KAAK,CAAChE,KAAK,CAACkE,MAAM,GAAG,SAAS;YAC9BF,KAAK,CAAChE,KAAK,CAACmE,UAAU,GAAG,8BAA8B;YACvDH,KAAK,CAAChE,KAAK,CAACC,QAAQ,GAAG,UAAU;;YAEjC;YACA+D,KAAK,CAACtB,SAAS,CAACS,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;;YAEzC;YACA,IAAI1F,aAAa,CAACuG,KAAK,CAAC,EAAE;cACxBF,aAAa,EAAE;YACjB;;YAEA;YACA3F,eAAe,CAAC6F,KAAK,CAAC;YACtBD,aAAa,EAAE;;YAEf;YACApC,oBAAoB,CAACqC,KAAK,CAAC;YAE3BI,OAAO,CAACC,GAAG,CAAC,eAAeL,KAAK,CAACzH,EAAE,eAAeyH,KAAK,CAAChE,KAAK,CAAC4C,IAAI,EAAE,CAAC;UACvE,CAAC,CAAC;UAEFwB,OAAO,CAACC,GAAG,CAAC,UAAUR,MAAM,CAAC/E,MAAM,kBAAkB,CAAC;UACtDsF,OAAO,CAACC,GAAG,CAAC,mBAAmBP,aAAa,SAAS,CAAC;UACtDM,OAAO,CAACC,GAAG,CAAC,qBAAqBN,aAAa,SAAS,CAAC;QAC1D;;QAEA;QACAjC,gBAAgB,CAAC,CAAC;QAElB7F,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOqI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,IAAIvI,eAAe,CAACgG,OAAO,EAAE;QAC3BhG,eAAe,CAACgG,OAAO,CAAChC,SAAS,GAAG;AAC5C;AACA;AACA;AACA,yCAAyCuE,KAAK,CAACC,OAAO;AACtD;AACA;AACA,SAAS;MACH;IACF;EACF,CAAC,EAAE,CAAC9G,aAAa,EAAEU,eAAe,EAAEwD,oBAAoB,EAAEG,gBAAgB,CAAC,CAAC;EAE5E5G,SAAS,CAAC,MAAM;IACdkI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBlI,SAAS,CAAC,MAAM;IACd,IAAIc,SAAS,EAAE;MACb8G,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAAC9G,SAAS,EAAE8G,SAAS,CAAC,CAAC;EAE1B,oBACErH,OAAA;IAAKc,EAAE,EAAC,cAAc;IAACiI,GAAG,EAAEzI;EAAgB;IAAA0I,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEV,CAAC;AAAC9I,EAAA,CAjgBIJ,KAAK;AAAAmJ,EAAA,GAALnJ,KAAK;AAmgBX,eAAeA,KAAK;AAAC,IAAAmJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
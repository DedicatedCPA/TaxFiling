{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{stateFilingData}from'../data/stateFilingData';import USMap from'./USMap';import StatesModal from'./StatesModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaxFilingTool=()=>{const[selectedStates,setSelectedStates]=useState([]);const[filingType,setFilingType]=useState('1120S');const[stateInput,setStateInput]=useState('');const[showModal,setShowModal]=useState(false);const[modalType,setModalType]=useState('');const[modalTitle,setModalTitle]=useState('');const[modalStates,setModalStates]=useState([]);const[svgLoaded,setSvgLoaded]=useState(false);// State name to abbreviation mapping\nconst stateNameToAbbr={};Object.keys(stateFilingData).forEach(abbr=>{stateNameToAbbr[stateFilingData[abbr].name.toLowerCase()]=abbr;stateNameToAbbr[abbr.toLowerCase()]=abbr;});const addState=()=>{const stateInputTrimmed=stateInput.trim();if(!stateInputTrimmed)return;let stateAbbr=null;// Check if it's an abbreviation\nif(stateNameToAbbr[stateInputTrimmed.toLowerCase()]){stateAbbr=stateNameToAbbr[stateInputTrimmed.toLowerCase()];}if(stateAbbr&&!selectedStates.includes(stateAbbr)){setSelectedStates(prev=>[...prev,stateAbbr]);setStateInput('');}else if(selectedStates.includes(stateAbbr)){alert('State already selected!');}else{alert('Invalid state name or abbreviation!');}};const removeState=stateAbbr=>{setSelectedStates(prev=>prev.filter(s=>s!==stateAbbr));};const selectAll=()=>{setSelectedStates(Object.keys(stateFilingData));};const resetAll=()=>{setSelectedStates([]);};const showStatesModal=bucketType=>{const titles={'required':'Filing Required States','conditional':'Conditional Filing States','no-filing':'No Filing Required States'};setModalTitle(titles[bucketType]);setModalType(bucketType);// Get states for this bucket\nconst bucketStates=selectedStates.filter(stateAbbr=>{const stateData=stateFilingData[stateAbbr];const filingStatus=stateData.forms[filingType];if(bucketType==='required')return filingStatus==='required';if(bucketType==='conditional')return filingStatus==='conditional';if(bucketType==='no-filing')return filingStatus==='not-required';return false;});setModalStates(bucketStates);setShowModal(true);};const closeStatesModal=()=>{setShowModal(false);};const handleKeyPress=e=>{if(e.key==='Enter'){addState();}};// Calculate counts for each bucket\nconst getBucketCounts=()=>{let requiredCount=0;let conditionalCount=0;let notRequiredCount=0;selectedStates.forEach(stateAbbr=>{const stateData=stateFilingData[stateAbbr];const filingStatus=stateData.forms[filingType];if(filingStatus==='required'){requiredCount++;}else if(filingStatus==='conditional'){conditionalCount++;}else if(filingStatus==='not-required'){notRequiredCount++;}});return{requiredCount,conditionalCount,notRequiredCount};};const{requiredCount,conditionalCount,notRequiredCount}=getBucketCounts();// Get city returns information\nconst getCityReturnsInfo=()=>{let cityReturnsRequired=0;let cityReturnsSpecific=0;let cityReturnsCities=[];selectedStates.forEach(stateAbbr=>{const stateData=stateFilingData[stateAbbr];if(stateData.cityReturns){if(stateData.cityReturns.type==='all'){cityReturnsRequired++;}else if(stateData.cityReturns.type==='specific'&&stateData.cityReturns.cities.length>0){cityReturnsSpecific++;cityReturnsCities.push(...stateData.cityReturns.cities.map(city=>\"\".concat(city,\", \").concat(stateAbbr)));}}});return{cityReturnsRequired,cityReturnsSpecific,cityReturnsCities};};const{cityReturnsRequired,cityReturnsSpecific,cityReturnsCities}=getCityReturnsInfo();return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"State Filing Requirements Tool\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tax Filing Configuration\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Configure your client's tax filing requirements and select the states where your client lives or has income. The map below will automatically update to show filing requirements for each selected state.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"side-by-side-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Select Filing Type\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose the type of tax filing to determine state requirements:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filing-type-selector\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"filing-type-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"filingType\",value:\"1120S\",checked:filingType==='1120S',onChange:e=>setFilingType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"filing-type-label\",children:\"1120S - S Corporation\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"filing-type-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"filingType\",value:\"1065\",checked:filingType==='1065',onChange:e=>setFilingType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"filing-type-label\",children:\"1065 - Partnership\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"filing-type-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"filingType\",value:\"1120\",checked:filingType==='1120',onChange:e=>setFilingType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"filing-type-label\",children:\"1120 - C Corporation\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"filing-type-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"filingType\",value:\"1040\",checked:filingType==='1040',onChange:e=>setFilingType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"filing-type-label\",children:\"1040 - Individual\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Select Client States\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter the states where your client lives or has income:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"state-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:stateInput,onChange:e=>setStateInput(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Enter state name or abbreviation (e.g., CA, California)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addState,children:\"Add State\"})]})]})]}),selectedStates.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"selected-states-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"selected-states-summary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"total-count\",children:/*#__PURE__*/_jsxs(\"h5\",{children:[\"Total States Selected: \",selectedStates.length]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"states-buckets\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bucket filing-required-bucket\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bucket-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Filing Required\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-states-btn\",onClick:()=>showStatesModal('required'),children:\"View States\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bucket-content\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"state-count\",children:[requiredCount,\" states\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bucket conditional-bucket\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bucket-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Conditional Filing\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-states-btn\",onClick:()=>showStatesModal('conditional'),children:\"View States\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bucket-content\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"state-count\",children:[conditionalCount,\" states\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bucket no-filing-bucket\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bucket-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"No Filing Required\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-states-btn\",onClick:()=>showStatesModal('no-filing'),children:\"View States\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bucket-content\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"state-count\",children:[notRequiredCount,\" states\"]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filing-summary\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Additional Filing Information\"}),(cityReturnsRequired>0||cityReturnsSpecific>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"city-returns-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"City Returns Required:\"}),/*#__PURE__*/_jsx(\"br\",{}),cityReturnsRequired>0&&\"\\u2022 \".concat(cityReturnsRequired,\" states require ALL cities to file<br />\"),cityReturnsSpecific>0&&\"\\u2022 \".concat(cityReturnsSpecific,\" states require specific cities to file: \").concat(cityReturnsCities.slice(0,5).join(', ')).concat(cityReturnsCities.length>5?' and more...':'')]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-button select-all-btn\",onClick:selectAll,children:\"Select All\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button reset-all-btn\",onClick:resetAll,children:\"Reset All\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button test-modal-btn\",onClick:()=>showStatesModal('required'),children:\"Test Modal\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"State Filing Requirements Map\"}),/*#__PURE__*/_jsx(USMap,{selectedStates:selectedStates,filingType:filingType,onStateClick:stateId=>{if(selectedStates.includes(stateId)){removeState(stateId);}else{setSelectedStates(prev=>[...prev,stateId]);}}})]}),/*#__PURE__*/_jsx(StatesModal,{show:showModal,onClose:closeStatesModal,title:modalTitle,states:modalStates,onRemoveState:removeState,stateFilingData:stateFilingData})]});};export default TaxFilingTool;","map":{"version":3,"names":["React","useState","useEffect","useRef","stateFilingData","USMap","StatesModal","jsx","_jsx","jsxs","_jsxs","TaxFilingTool","selectedStates","setSelectedStates","filingType","setFilingType","stateInput","setStateInput","showModal","setShowModal","modalType","setModalType","modalTitle","setModalTitle","modalStates","setModalStates","svgLoaded","setSvgLoaded","stateNameToAbbr","Object","keys","forEach","abbr","name","toLowerCase","addState","stateInputTrimmed","trim","stateAbbr","includes","prev","alert","removeState","filter","s","selectAll","resetAll","showStatesModal","bucketType","titles","bucketStates","stateData","filingStatus","forms","closeStatesModal","handleKeyPress","e","key","getBucketCounts","requiredCount","conditionalCount","notRequiredCount","getCityReturnsInfo","cityReturnsRequired","cityReturnsSpecific","cityReturnsCities","cityReturns","type","cities","length","push","map","city","concat","className","children","value","checked","onChange","target","onKeyPress","placeholder","onClick","slice","join","onStateClick","stateId","show","onClose","title","states","onRemoveState"],"sources":["/Users/arielkeren/Desktop/GitHub/TaxFiling/src/components/TaxFilingTool.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { stateFilingData } from '../data/stateFilingData';\nimport USMap from './USMap';\nimport StatesModal from './StatesModal';\n\nconst TaxFilingTool = () => {\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [filingType, setFilingType] = useState('1120S');\n  const [stateInput, setStateInput] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [modalTitle, setModalTitle] = useState('');\n  const [modalStates, setModalStates] = useState([]);\n  const [svgLoaded, setSvgLoaded] = useState(false);\n\n  // State name to abbreviation mapping\n  const stateNameToAbbr = {};\n  Object.keys(stateFilingData).forEach(abbr => {\n    stateNameToAbbr[stateFilingData[abbr].name.toLowerCase()] = abbr;\n    stateNameToAbbr[abbr.toLowerCase()] = abbr;\n  });\n\n  const addState = () => {\n    const stateInputTrimmed = stateInput.trim();\n    \n    if (!stateInputTrimmed) return;\n    \n    let stateAbbr = null;\n    \n    // Check if it's an abbreviation\n    if (stateNameToAbbr[stateInputTrimmed.toLowerCase()]) {\n      stateAbbr = stateNameToAbbr[stateInputTrimmed.toLowerCase()];\n    }\n    \n    if (stateAbbr && !selectedStates.includes(stateAbbr)) {\n      setSelectedStates(prev => [...prev, stateAbbr]);\n      setStateInput('');\n    } else if (selectedStates.includes(stateAbbr)) {\n      alert('State already selected!');\n    } else {\n      alert('Invalid state name or abbreviation!');\n    }\n  };\n\n  const removeState = (stateAbbr) => {\n    setSelectedStates(prev => prev.filter(s => s !== stateAbbr));\n  };\n\n  const selectAll = () => {\n    setSelectedStates(Object.keys(stateFilingData));\n  };\n\n  const resetAll = () => {\n    setSelectedStates([]);\n  };\n\n  const showStatesModal = (bucketType) => {\n    const titles = {\n      'required': 'Filing Required States',\n      'conditional': 'Conditional Filing States',\n      'no-filing': 'No Filing Required States'\n    };\n    \n    setModalTitle(titles[bucketType]);\n    setModalType(bucketType);\n    \n    // Get states for this bucket\n    const bucketStates = selectedStates.filter(stateAbbr => {\n      const stateData = stateFilingData[stateAbbr];\n      const filingStatus = stateData.forms[filingType];\n      \n      if (bucketType === 'required') return filingStatus === 'required';\n      if (bucketType === 'conditional') return filingStatus === 'conditional';\n      if (bucketType === 'no-filing') return filingStatus === 'not-required';\n      return false;\n    });\n    \n    setModalStates(bucketStates);\n    setShowModal(true);\n  };\n\n  const closeStatesModal = () => {\n    setShowModal(false);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      addState();\n    }\n  };\n\n  // Calculate counts for each bucket\n  const getBucketCounts = () => {\n    let requiredCount = 0;\n    let conditionalCount = 0;\n    let notRequiredCount = 0;\n    \n    selectedStates.forEach(stateAbbr => {\n      const stateData = stateFilingData[stateAbbr];\n      const filingStatus = stateData.forms[filingType];\n      \n      if (filingStatus === 'required') {\n        requiredCount++;\n      } else if (filingStatus === 'conditional') {\n        conditionalCount++;\n      } else if (filingStatus === 'not-required') {\n        notRequiredCount++;\n      }\n    });\n    \n    return { requiredCount, conditionalCount, notRequiredCount };\n  };\n\n  const { requiredCount, conditionalCount, notRequiredCount } = getBucketCounts();\n\n  // Get city returns information\n  const getCityReturnsInfo = () => {\n    let cityReturnsRequired = 0;\n    let cityReturnsSpecific = 0;\n    let cityReturnsCities = [];\n    \n    selectedStates.forEach(stateAbbr => {\n      const stateData = stateFilingData[stateAbbr];\n      \n      if (stateData.cityReturns) {\n        if (stateData.cityReturns.type === 'all') {\n          cityReturnsRequired++;\n        } else if (stateData.cityReturns.type === 'specific' && stateData.cityReturns.cities.length > 0) {\n          cityReturnsSpecific++;\n          cityReturnsCities.push(...stateData.cityReturns.cities.map(city => `${city}, ${stateAbbr}`));\n        }\n      }\n    });\n    \n    return { cityReturnsRequired, cityReturnsSpecific, cityReturnsCities };\n  };\n\n  const { cityReturnsRequired, cityReturnsSpecific, cityReturnsCities } = getCityReturnsInfo();\n\n  return (\n    <div className=\"container\">\n      <h1>State Filing Requirements Tool</h1>\n      \n      <div className=\"form-section\">\n        <h3>Tax Filing Configuration</h3>\n        <p>Configure your client's tax filing requirements and select the states where your client lives or has income. The map below will automatically update to show filing requirements for each selected state.</p>\n        \n        <div className=\"side-by-side-container\">\n          <div>\n            <h4>Select Filing Type</h4>\n            <p>Choose the type of tax filing to determine state requirements:</p>\n            \n            <div className=\"filing-type-selector\">\n              <label className=\"filing-type-option\">\n                <input \n                  type=\"radio\" \n                  name=\"filingType\" \n                  value=\"1120S\" \n                  checked={filingType === '1120S'}\n                  onChange={(e) => setFilingType(e.target.value)}\n                />\n                <span className=\"filing-type-label\">1120S - S Corporation</span>\n              </label>\n              <label className=\"filing-type-option\">\n                <input \n                  type=\"radio\" \n                  name=\"filingType\" \n                  value=\"1065\"\n                  checked={filingType === '1065'}\n                  onChange={(e) => setFilingType(e.target.value)}\n                />\n                <span className=\"filing-type-label\">1065 - Partnership</span>\n              </label>\n              <label className=\"filing-type-option\">\n                <input \n                  type=\"radio\" \n                  name=\"filingType\" \n                  value=\"1120\"\n                  checked={filingType === '1120'}\n                  onChange={(e) => setFilingType(e.target.value)}\n                />\n                <span className=\"filing-type-label\">1120 - C Corporation</span>\n              </label>\n              <label className=\"filing-type-option\">\n                <input \n                  type=\"radio\" \n                  name=\"filingType\" \n                  value=\"1040\"\n                  checked={filingType === '1040'}\n                  onChange={(e) => setFilingType(e.target.value)}\n                />\n                <span className=\"filing-type-label\">1040 - Individual</span>\n              </label>\n            </div>\n          </div>\n          \n          <div>\n            <h4>Select Client States</h4>\n            <p>Enter the states where your client lives or has income:</p>\n            \n            <div className=\"state-input\">\n              <input \n                type=\"text\" \n                value={stateInput}\n                onChange={(e) => setStateInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Enter state name or abbreviation (e.g., CA, California)\"\n              />\n              <button onClick={addState}>Add State</button>\n            </div>\n          </div>\n        </div>\n        \n        {/* Selected States Summary Section */}\n        {selectedStates.length > 0 && (\n          <div className=\"selected-states-section\">\n            <div className=\"selected-states-summary\">\n              <div className=\"total-count\">\n                <h5>Total States Selected: {selectedStates.length}</h5>\n              </div>\n              <div className=\"states-buckets\">\n                <div className=\"bucket filing-required-bucket\">\n                  <div className=\"bucket-header\">\n                    <h5>Filing Required</h5>\n                    <button className=\"view-states-btn\" onClick={() => showStatesModal('required')}>\n                      View States\n                    </button>\n                  </div>\n                  <div className=\"bucket-content\">\n                    <span className=\"state-count\">{requiredCount} states</span>\n                  </div>\n                </div>\n                <div className=\"bucket conditional-bucket\">\n                  <div className=\"bucket-header\">\n                    <h5>Conditional Filing</h5>\n                    <button className=\"view-states-btn\" onClick={() => showStatesModal('conditional')}>\n                      View States\n                    </button>\n                  </div>\n                  <div className=\"bucket-content\">\n                    <span className=\"state-count\">{conditionalCount} states</span>\n                  </div>\n                </div>\n                <div className=\"bucket no-filing-bucket\">\n                  <div className=\"bucket-header\">\n                    <h5>No Filing Required</h5>\n                    <button className=\"view-states-btn\" onClick={() => showStatesModal('no-filing')}>\n                      View States\n                    </button>\n                  </div>\n                  <div className=\"bucket-content\">\n                    <span className=\"state-count\">{notRequiredCount} states</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"filing-summary\">\n                <h5>Additional Filing Information</h5>\n                {(cityReturnsRequired > 0 || cityReturnsSpecific > 0) && (\n                  <div className=\"city-returns-info\">\n                    <strong>City Returns Required:</strong><br />\n                    {cityReturnsRequired > 0 && `• ${cityReturnsRequired} states require ALL cities to file<br />`}\n                    {cityReturnsSpecific > 0 && `• ${cityReturnsSpecific} states require specific cities to file: ${cityReturnsCities.slice(0, 5).join(', ')}${cityReturnsCities.length > 5 ? ' and more...' : ''}`}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"action-buttons\">\n          <button \n            className=\"action-button select-all-btn\" \n            onClick={selectAll}\n          >\n            Select All\n          </button>\n          <button \n            className=\"action-button reset-all-btn\" \n            onClick={resetAll}\n          >\n            Reset All\n          </button>\n          <button \n            className=\"action-button test-modal-btn\" \n            onClick={() => showStatesModal('required')}\n          >\n            Test Modal\n          </button>\n        </div>\n      </div>\n\n      <div className=\"map-container\">\n        <h3>State Filing Requirements Map</h3>\n        <USMap \n          selectedStates={selectedStates}\n          filingType={filingType}\n          onStateClick={(stateId) => {\n            if (selectedStates.includes(stateId)) {\n              removeState(stateId);\n            } else {\n              setSelectedStates(prev => [...prev, stateId]);\n            }\n          }}\n        />\n      </div>\n      \n      <StatesModal\n        show={showModal}\n        onClose={closeStatesModal}\n        title={modalTitle}\n        states={modalStates}\n        onRemoveState={removeState}\n        stateFilingData={stateFilingData}\n      />\n    </div>\n  );\n};\n\nexport default TaxFilingTool; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}